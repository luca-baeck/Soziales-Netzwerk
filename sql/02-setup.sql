USE hiddlestick;

CREATE TABLE User(
    ID UUID NOT NULL,
    Handle CHAR(23) NOT NULL,
    Name VARCHAR(47) NOT NULL,
    Password CHAR(128) NOT NULL,
    CreationTime TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,

    PRIMARY KEY(ID),

    UNIQUE(Handle)
);

CREATE TABLE Sticker(
    ID UUID NOT NULL,
    Name CHAR(31) NOT NULL,
    CreatorID UUID NULL,
    Description VARCHAR(511) NULL,
    CreationTime TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,

    PRIMARY KEY(ID),

    UNIQUE(Name),

    FOREIGN KEY(CreatorID)
        REFERENCES User(ID)
        ON UPDATE CASCADE
        ON DELETE SET NULL
);

CREATE TABLE Post(
    ID UUID NOT NULL,
    CreatorID UUID NOT NULL,
    StickerID UUID NULL,
    Media UUID NULL,
    MediaExtension VARCHAR(7) NULL,
    Content VARCHAR(4095) NOT NULL,
    CreationTime TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,

    PRIMARY KEY(ID),

    FOREIGN KEY(CreatorID)
        REFERENCES User(ID)
        ON UPDATE RESTRICT
        ON DELETE CASCADE,
    
    FOREIGN KEY(StickerID)
        REFERENCES Sticker(ID)
        ON UPDATE CASCADE
        ON DELETE SET NULL
);

CREATE TABLE Shoot(
    Target UUID NOT NULL,
    Archer UUID NOT NULL,
    Shot TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,

    PRIMARY KEY(Target, Archer),

    FOREIGN KEY(Target)
        REFERENCES User(ID)
        ON UPDATE CASCADE
        ON DELETE CASCADE,

    FOREIGN KEY(Archer)
        REFERENCES User(ID)
        ON UPDATE CASCADE
        ON DELETE CASCADE
);

CREATE TABLE Point(
    PostID UUID NOT NULL,
    UserID UUID NOT NULL,
    Time TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,

    PRIMARY KEY(PostID, UserID),

    FOREIGN KEY(PostID)
        REFERENCES Post(ID)
        ON UPDATE CASCADE
        ON DELETE CASCADE,

    FOREIGN KEY(UserID)
        REFERENCES User(ID)
        ON UPDATE CASCADE
        ON DELETE CASCADE
);

CREATE TABLE Session(
    UserID UUID NOT NULL,
    CreationTime TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    Name VARCHAR(127) NULL,
    Token UUID NOT NULL,
    ExpirationDate DATE NULL,

    PRIMARY KEY(UserID, CreationTime),

    FOREIGN KEY(UserID)
        REFERENCES User(ID)
        ON UPDATE CASCADE
        ON DELETE CASCADE
);

CREATE TABLE PermissionLevel(
    Level TINYINT NOT NULL,
    Name VARCHAR(15) NOT NULL,

    PRIMARY KEY(Level),

    UNIQUE(Name)
);

CREATE TABLE Permission(
    UserID UUID NOT NULL,
    Level TINYINT UNSIGNED NOT NULL,

    PRIMARY KEY(UserID),

    FOREIGN KEY(UserID)
        REFERENCES User(ID)
        ON UPDATE CASCADE
        ON DELETE CASCADE,

    FOREIGN KEY(Level)
        REFERENCES PermissionLevel(Level)
        ON UPDATE CASCADE
        ON DELETE CASCADE
);

CREATE TABLE UploadType(
    Type TINYINT NOT NULL,
    Name VARCHAR(15) NOT NULL,

    PRIMARY KEY(Type),

    UNIQUE(Name)
);

CREATE TABLE Upload(
    ID UUID NOT NULL,
    Extension VARCHAR(7) NOT NULL,
    Type TINYINT NOT NULL,
    UploaderID UUID NOT NULL,
    UploadTime TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    ExpirationTime TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,

    PRIMARY KEY(ID),

    FOREIGN KEY(Type)
        REFERENCES UploadType(Type)
        ON UPDATE CASCADE
        ON DELETE CASCADE,

    FOREIGN KEY(UploaderID)
        REFERENCES User(ID)
        ON UPDATE CASCADE
        ON DELETE CASCADE
);
USE hiddlestick;

CREATE TABLE User(
    ID UUID NOT NULL,
    Handle CHAR(31) NOT NULL,
    Name VARCHAR(63) NOT NULL,
    Password CHAR(128) NOT NULL,
    ProfilePicture VARCHAR(255) NULL,
    CreationTime TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,

    PRIMARY KEY(ID),

    UNIQUE(Handle)
);

CREATE TABLE Sticker(
    ID UUID NOT NULL,
    Name CHAR(31) NOT NULL,
    Location VARCHAR(255) NOT NULL,
    CreatorID UUID NULL,
    Description VARCHAR(511) NULL,
    CreationTime TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,

    PRIMARY KEY(ID),

    UNIQUE(Name),

    FOREIGN KEY(CreatorID)
        REFERENCES User(ID)
        ON UPDATE CASCADE
        ON DELETE SET NULL
);

CREATE TABLE Post(
    ID UUID NOT NULL,
    CreatorID UUID NOT NULL,
    StickerID UUID NULL,
    Media VARCHAR(255) NULL,
    Content VARCHAR(1023) NOT NULL,
    CreationTime TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,

    PRIMARY KEY(ID),

    FOREIGN KEY(CreatorID)
        REFERENCES User(ID)
        ON UPDATE RESTRICT
        ON DELETE CASCADE,
    
    FOREIGN KEY(StickerID)
        REFERENCES Sticker(ID)
        ON UPDATE CASCADE
        ON DELETE SET NULL
);

CREATE TABLE Shoot(
    Target UUID NOT NULL,
    Archer UUID NOT NULL,
    Shot TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,

    PRIMARY KEY(Target, Archer),

    FOREIGN KEY(Target)
        REFERENCES User(ID)
        ON UPDATE CASCADE
        ON DELETE CASCADE,

    FOREIGN KEY(Archer)
        REFERENCES User(ID)
        ON UPDATE CASCADE
        ON DELETE CASCADE
);

CREATE TABLE Like(
    PostID UUID NOT NULL,
    UserID UUID NOT NULL,
    Time TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,

    PRIMARY KEY(PostID, User),

    FOREIGN KEY(PostID)
        REFERENCES Post(ID)
        ON UPDATE CASCADE
        ON DELETE CASCADE,

    FOREIGN KEY(UserID)
        REFERENCES User(ID)
        ON UPDATE CASCADE
        ON DELETE CASCADE
);

CREATE TABLE Session(
    UserID UUID NOT NULL,
    CreationTime TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    Name VARCHAR(127) NULL,
    Token UUID NOT NULL,
    ExpirationTime TIMESTAMP NULL,

    PRIMARY KEY(User, CreationTime),

    FOREIGN KEY(UserID)
        REFERENCES User(ID)
        ON UPDATE CASCADE
        ON DELETE CASCADE
);